<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KaenSpace</title>
    <link>https://kaendagger.github.io/</link>
    <description>Recent content on KaenSpace</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 11 Jul 2019 14:04:27 +0530</lastBuildDate>
    
	<atom:link href="https://kaendagger.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tail Call Optimization in Kotlin</title>
      <link>https://kaendagger.github.io/posts/2019/07/tail-call-optimization-in-kotlin/</link>
      <pubDate>Thu, 11 Jul 2019 14:04:27 +0530</pubDate>
      
      <guid>https://kaendagger.github.io/posts/2019/07/tail-call-optimization-in-kotlin/</guid>
      <description>Before understanding Tail Call Optimization. Lets get a brief about “Function Call Stack” and “Recursion”
Function Call Stack When ever Java Application starts, a process starts in which our application (main thread) works. With this, Stack is maintained for the function calls. This stack contains Stack Frame which stores data of local variable to that frame.
For example, consider this sample program with three functions.
Sample Java Program
When the program starts firstly main() is called.</description>
    </item>
    
    <item>
      <title>Changes in Android Runtime</title>
      <link>https://kaendagger.github.io/posts/2019/06/changes-in-android-runtime/</link>
      <pubDate>Sat, 08 Jun 2019 14:04:27 +0530</pubDate>
      
      <guid>https://kaendagger.github.io/posts/2019/06/changes-in-android-runtime/</guid>
      <description>Hey guys , Android has been around ten years and since then Google introduced many things in android , improved , changed and so on. So with the Runtime in Android.
In this post , I will tell about how the runtime environment in android changed among the android verisons. Before we began , lets know about JIT and AOT
JIT (Just in Time) — Its the compilation of code on the fly (Just in time) i.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kaendagger.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kaendagger.github.io/about/</guid>
      <description>Hi ! there I am Rohan Maity (aka KaenDagger), a Information Technology Engineering undergraduate student currently in my final year (graduating by June 2020) from MAIT, New Delhi, India.
As for technical, I am an engineer who loves to contribute to open source, enthusiast about kotlin language and develop android apps.I have been a tech speaker, mentor &amp;amp; mentee.
Rest, I am person who loves Naruto, Big bang theory and a lots food \o/.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kaendagger.github.io/sessions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kaendagger.github.io/sessions/</guid>
      <description>Sessions Komparing Persistence  Kotlin/Everywhere Jaipur, 13th September,2019 | Link: Twitter
 Kotlin for Dummies  India Linux Users Group, 25th May, 2019 | Link:Twitter
 Magic of Shared Code: Kotlin/Multiplatform  Mozilla Punjab, 23rd March, 2019 | Link: Twitter
 Tail Call Optimization with Kotlin  Pragma Conf, IIIT Allahabad, 20th January, 2019 | Link: Pragma
 </description>
    </item>
    
  </channel>
</rss>